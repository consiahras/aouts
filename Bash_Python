#To just type a command into bash into python code
import os
os.system('ls')  # the active kernel literally did ls and gave return code of 0 - success

#Better yet, you can use subprocess's call, it is safer, more powerful and likely faster:

from subprocess import call
call('echo "I like potatos"', shell=True)

#Or, without invoking shell:
call(['echo', 'I like potatos'])

#If you want to capture the output, one way of doing it is like this:
import subprocess
cmd = ['echo', 'I like potatos']
proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

o, e = proc.communicate()

print('Output: ' + o.decode('ascii'))
print('Error: '  + e.decode('ascii'))
print('code: ' + str(proc.returncode))

#if you want to put timeout in communicate and also to capture exceptions
# https://docs.python.org/3/library/subprocess.html
