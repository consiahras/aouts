#IF LOOP
x = 5
if x < 10:
	print('Smaller')
if x > 20:
	print('Bigger')
print('Finish the IF statement')

#Nested IF
x =4
if x > 4:
		print('einai megaliteros apo to :',x)
elif x<4:
	print('einai mikrotero')
else:
	print('ante re .. to brikes',x)
  
# Types 
print('HOW TO CHANGE str variable --> integer (using int(string))')
skata='123'
print(skata)
print(type(skata))
skatanumber=int(skata)
print(skatanumber)
print(type(skatanumber))


#try/except
#if you arent sure if something blue up the code , you use those ones
#so its like, i know it may blow but i dont want my code to die.
astr='Hello Bob'
try:
	print('trying the exception')
	istr=int(astr)
except:
	istr=-1
	print('If you see this code means except activaded so value is -1')
print(istr)



#FUNCTIONS 
print('There are 2 kind of Functions: Build-in functions like')
print('like float() etc and Fucntions taht we define ourselves')
def greet(lang): #<-How you make FUNCTIONs
	if lang=='es':
		print('Hola')
	elif lang=='fr':
		print('Bonjoour') #<--IF statement
	else:
		print('Hello')
	return(lang)  #<--- this is what returns

greet('fr')
print(greet('brbbr'))
print('Hello with language',greet('fr'))


#While loop 
n=5
while n > 0:
	print(n)
	n = n -1
print('Final value of n = ', n)



#WHILE loop + break 
n=5
while n > 0:
	print(n)
	n = n -1
	if n ==3:
		print('Break loop at 3')
		break


#WHILE TRUE 
while True:
	line=input('Grapse kati # agnonei me continue Done kanei break')
	if line[0]=='#':    #<---If you type #asdas it wont do anything
		continue
	if line =='done':   #<-- If you type 'done' , program will finish
		break
	print(line)         #<-- prints what you typed
print('Finished program')



#FOR LOOP
for i in [5,4,3,2,1]:
	print(i)
print('Finished for loop ')

friends=['Alexandra','Takis','Alex']
for friend in friends:
	print('kalispera file : ', friend)
print('Completed Greetings in loop of LIST')



#Concatenation(combining strings)
first_name='Albert'
last_name='Einstein'
fullname=first_name + ' ' + last_name
print(fullname)



count=0
print('the print adds a new line everytime it prints.')
print('So even if we have okay code it prints the new lines')
file_handle=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in file_handle:
	print(line)
	count=count +1
print(count)




print('To correct this problem: make the gaps dissapear')
#Every line into the file has \n at the end. So when print() gives \n as well . We have 2 lines
#To make this better we need to use .rstrip
#line=line.rstrip()

count=0
print('the print adds a new line everytime it prints.')
print('So even if we have okay code it prints the new lines')
file_handle=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in file_handle:
	line=line.rstrip()
	print(line)
	count=count +1
print(count)



print('*************************************')
file_handle=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in file_handle:
	line=line.rstrip()
	if not line.startswith('I '):
		continue
	print(line)


print('**********Ignore lines that dont have @hotmail.com  ***********************')
file_handle=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in file_handle:
	line=line.rstrip()
	if not '@hotmail.com' in line:
		continue
	print(line)



x =list()
type(x)
dir(x)
print(type(x))
print(dir(x))
print('dir(x) if you wanna check if you want to check what a type of variable can do')
print('if you wanna check if somehing is in a list. Use "in" or "not in"')


#How to split words, and this returns them like a list
abc = ' With three words'
stuff = abc.split()
print(stuff)
print(len(stuff))
print(stuff[0])
print(stuff[2])
print(stuff[:])
print('You can always put a for loop after to check all the words for something')
print('And you can aways do a second split(''), this way for example you specify the parameter, in this case you split mails')

#How to split words from a text, and this returns them like a list
file_handle=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in file_handle:
    line=line.rstrip()
    if not line.startswith('I am'): continue
    words=line.split()
    print(words)



#EMPTY LIST
print([])
#LIST INSIDE LIST
print([1,[2,5],3])



#Concatenating Lists using +
a=[1,2,3]
b=[4,5,6]
c=a+b
print(c)



#If you want to create a List fast
list_of_ints = list(range(3))
print(list_of_ints)
print(len(list_of_ints))
#If you want to make a list of the result of something you can just do it(in this case i just take a length)
print(list(range(len(list_of_ints))))



#LOOP in List
friends=['John','George','Alex']
print(friends)
print(friends[1])
for friend in friends:
    print('Happy new Year: ', friend)
    
    
#LOOP in list using range , more complicate but you can have a counter , its good to use it if we need to change 
#something, or you need to know where you currently are.
friends=['John','George','Alex']
for i in list(range(len(friends))):
    friend=friends[i]
    print('happy new year :', friend)



#Lists can be slised using
t=[1,2,3,4,5,6,7,8,9]
print(t[1:3])
print(t[:4])
print(t[3:])


#Building a List with .append   (starting with an empty list)
stuff=list()
stuff.append('ante')
stuff.append(99)
print(stuff)

#SORT a list , this alterts the list
friends=['John','George','Alex']
print(friends)
friends.sort()
print(friends)

#DICNTIONARIES ARE FASTER and its random located inside
# List is a collection of values in order but dictionaries like random staff')
#Dictionaries have labels to define what is inside , So they has KEY / VALUES')

purse=dict()
purse['money']=12
purse['candy']=3
purse['tissue']=75
purse['candy']=purse['candy'] +2
print(purse)

skatadict={'skata1':1 , 'skata2':2, 'skata3':3}
print(skatadict)


#LIST EXERCISE
fhand=open('/Users/konstantinossiachras/Desktop/Python Scripting/skata.txt')
for line in fhand:
           line=line.rstrip()
            #This is the 1st way to avoid blank lines creating issue   
            #if line= "" : continue
           words=line.split()
            #this is 2nd way to avoid blank lines creating issues
            #if len(words) < 1 : continue
            #this is the 3rd way
           if words == [] : continue
           if words[0] != 'I' : continue
           print(words[5])

year=2000
if (year % 4==0):
    if (year % 400 ==0):
        leap=False
    elif (year % 100 ==0):
        leap=False
    else:
        leap=True
print(leap)

